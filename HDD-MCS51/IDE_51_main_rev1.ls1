AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE     1


MACRO ASSEMBLER AX51 V3.01
OBJECT MODULE PLACED IN IDE_51_main_rev1.OBJ
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.EXE IDE_51_main_rev1.src PR(.\IDE_51_main_rev1.ls1) EP

LOC    OBJ             LINE     SOURCE

                          1     ; .\IDE_51_main_rev1.SRC generated from: IDE_51_main_rev1.c
                          2     ; COMPILER INVOKED BY:
                          3     ;        C:\Keil\C51\BIN\C51.EXE IDE_51_main_rev1.c OMF2 INCDIR(C:\Keil\C51\INC\Atmel;C:
                               \Keil\C51\INC) SRC(.\IDE_51_main_rev1.SRC)
                          4     
                          5     $nomod51 
                          6     
                          7     NAME    IDE_51_MAIN_REV1
                          8     
 00D8.2                   9     CCF2    BIT     0D8H.2
 00D8.3                  10     CCF3    BIT     0D8H.3
 0080                    11     P0      DATA    080H
 00D8.4                  12     CCF4    BIT     0D8H.4
 0090                    13     P1      DATA    090H
 00A0                    14     P2      DATA    0A0H
 00B0                    15     P3      DATA    0B0H
 00D0.6                  16     AC      BIT     0D0H.6
 00C0                    17     P4      DATA    0C0H
 00B0.4                  18     T0      BIT     0B0H.4
 0090.6                  19     RDn     BIT     090H.6
 00B0.5                  20     T1      BIT     0B0H.5
 00A8.7                  21     EA      BIT     0A8H.7
 00A8.6                  22     EC      BIT     0A8H.6
 00D8.7                  23     CF      BIT     0D8H.7
 00F9                    24     CH      DATA    0F9H
 0098.7                  25     FE      BIT     098H.7
 00A8                    26     IEN0    DATA    0A8H
 00E8.1                  27     EADC    BIT     0E8H.1
 00E8                    28     IEN1    DATA    0E8H
 00E9                    29     CL      DATA    0E9H
 00F6                    30     ADCF    DATA    0F6H
 00FA                    31     CCAP0H  DATA    0FAH
 0090.0                  32     P1_0    BIT     090H.0
 00FB                    33     CCAP1H  DATA    0FBH
 00B7                    34     IPH0    DATA    0B7H
 00F5                    35     ADDH    DATA    0F5H
 00A0.0                  36     P2_0    BIT     0A0H.0
 0090.1                  37     P1_1    BIT     090H.1
 00FC                    38     CCAP2H  DATA    0FCH
 00F7                    39     IPH1    DATA    0F7H
 00B0.0                  40     P3_0    BIT     0B0H.0
 00A0.1                  41     P2_1    BIT     0A0H.1
 0090.2                  42     P1_2    BIT     090H.2
 00FD                    43     CCAP3H  DATA    0FDH
 00B0.1                  44     P3_1    BIT     0B0H.1
 00A0.2                  45     P2_2    BIT     0A0H.2
 0090.3                  46     P1_3    BIT     090H.3
 00FE                    47     CCAP4H  DATA    0FEH
 00EA                    48     CCAP0L  DATA    0EAH
 00D8.6                  49     CR      BIT     0D8H.6
 00B0.2                  50     P3_2    BIT     0B0H.2
 00A0.3                  51     P2_3    BIT     0A0H.3
 0090.4                  52     P1_4    BIT     090H.4
 00EB                    53     CCAP1L  DATA    0EBH
 00DA                    54     CCAPM0  DATA    0DAH
 00B8                    55     IPL0    DATA    0B8H
 00F4                    56     ADDL    DATA    0F4H
 00C8.6                  57     EXF2    BIT     0C8H.6
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE     2

 00B0.7                  58     RD      BIT     0B0H.7
 00B0.3                  59     P3_3    BIT     0B0H.3
 00A0.4                  60     P2_4    BIT     0A0H.4
 0090.5                  61     P1_5    BIT     090H.5
 00EC                    62     CCAP2L  DATA    0ECH
 00DB                    63     CCAPM1  DATA    0DBH
 00F8                    64     IPL1    DATA    0F8H
 00B0.4                  65     P3_4    BIT     0B0H.4
 00A0.5                  66     P2_5    BIT     0A0H.5
 0090.6                  67     P1_6    BIT     090H.6
 0090.5                  68     WRn     BIT     090H.5
 00ED                    69     CCAP3L  DATA    0EDH
 00DC                    70     CCAPM2  DATA    0DCH
 00A8.4                  71     ES      BIT     0A8H.4
 00B0.5                  72     P3_5    BIT     0B0H.5
 00A0.6                  73     P2_6    BIT     0A0H.6
 0090.7                  74     P1_7    BIT     090H.7
 00EE                    75     CCAP4L  DATA    0EEH
 00DD                    76     CCAPM3  DATA    0DDH
 00D0.1                  77     UD      BIT     0D0H.1
 00B0.6                  78     P3_6    BIT     0B0H.6
 00A0.7                  79     P2_7    BIT     0A0H.7
 00DE                    80     CCAPM4  DATA    0DEH
 00B0.7                  81     P3_7    BIT     0B0H.7
 0098.0                  82     RI      BIT     098H.0
 00D0.7                  83     CY      BIT     0D0H.7
 00B0.2                  84     INT0    BIT     0B0H.2
 0098.1                  85     TI      BIT     098H.1
 00B0.3                  86     INT1    BIT     0B0H.3
 00C0.0                  87     tstbit  BIT     0C0H.0
 00CB                    88     RCAP2H  DATA    0CBH
 0081                    89     SP      DATA    081H
 00D9                    90     CMOD    DATA    0D9H
 00D8                    91     CCON    DATA    0D8H
 00D0.2                  92     OV      BIT     0D0H.2
 00CA                    93     RCAP2L  DATA    0CAH
 00D1                    94     FCON    DATA    0D1H
 00C8.1                  95     C_T2    BIT     0C8H.1
 00B0.6                  96     WR      BIT     0B0H.6
 00C8.5                  97     RCLK    BIT     0C8H.5
 00C8.4                  98     TCLK    BIT     0C8H.4
 0099                    99     SBUF    DATA    099H
 0087                   100     PCON    DATA    087H
 0098                   101     SCON    DATA    098H
 0090.3                 102     CS0n    BIT     090H.3
 0089                   103     TMOD    DATA    089H
 0088                   104     TCON    DATA    088H
 0090.4                 105     CS1n    BIT     090H.4
 0088.1                 106     IE0     BIT     088H.1
 0088.3                 107     IE1     BIT     088H.3
 008E                   108     AUXR    DATA    08EH
 00F0                   109     B       DATA    0F0H
 00C8.0                 110     CP_RL2  BIT     0C8H.0
 00E0                   111     ACC     DATA    0E0H
 00A8.1                 112     ET0     BIT     0A8H.1
 00A8.3                 113     ET1     BIT     0A8H.3
 0088.5                 114     TF0     BIT     088H.5
 00A8.5                 115     ET2     BIT     0A8H.5
 0088.7                 116     TF1     BIT     088H.7
 0098.2                 117     RB8     BIT     098H.2
 008C                   118     TH0     DATA    08CH
 00C8.7                 119     TF2     BIT     0C8H.7
 00A8.0                 120     EX0     BIT     0A8H.0
 008D                   121     TH1     DATA    08DH
 0088.0                 122     IT0     BIT     088H.0
 00A8.2                 123     EX1     BIT     0A8H.2
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE     3

 0098.3                 124     TB8     BIT     098H.3
 00CD                   125     TH2     DATA    0CDH
 0088.2                 126     IT1     BIT     088H.2
 00D0.0                 127     P       BIT     0D0H.0
 0098.7                 128     SM0     BIT     098H.7
 008A                   129     TL0     DATA    08AH
 0098.6                 130     SM1     BIT     098H.6
 008B                   131     TL1     DATA    08BH
 0098.5                 132     SM2     BIT     098H.5
 00CC                   133     TL2     DATA    0CCH
 00D0.3                 134     RS0     BIT     0D0H.3
 0088.4                 135     TR0     BIT     088H.4
 00D0.4                 136     RS1     BIT     0D0H.4
 0088.6                 137     TR1     BIT     088H.6
 00C8.2                 138     TR2     BIT     0C8H.2
 00A7                   139     WDTPRG  DATA    0A7H
 0083                   140     DPH     DATA    083H
 00F2                   141     ADCLK   DATA    0F2H
 0082                   142     DPL     DATA    082H
 00C8.3                 143     EXEN2   BIT     0C8H.3
 0098.4                 144     REN     BIT     098H.4
 00F3                   145     ADCON   DATA    0F3H
 00C9                   146     T2MOD   DATA    0C9H
 00C8                   147     T2CON   DATA    0C8H
 00A6                   148     WDTRST  DATA    0A6H
 00D2                   149     EECON   DATA    0D2H
 00B9                   150     SADEN   DATA    0B9H
 00B0.0                 151     RXD     BIT     0B0H.0
 00A9                   152     SADDR   DATA    0A9H
 008F                   153     CKCON   DATA    08FH
 0090.0                 154     A0      BIT     090H.0
 00B0.1                 155     TXD     BIT     0B0H.1
 0090.1                 156     A1      BIT     090H.1
 0090.2                 157     A2      BIT     090H.2
 00A2                   158     AUXR1   DATA    0A2H
 0090.7                 159     RESETn  BIT     090H.7
 00D0.5                 160     F0      BIT     0D0H.5
 00D0                   161     PSW     DATA    0D0H
 00D8.0                 162     CCF0    BIT     0D8H.0
 00D8.1                 163     CCF1    BIT     0D8H.1
------                  164     ?PR?main?IDE_51_MAIN_REV1                SEGMENT CODE 
------                  165     ?PR?wait_ATA_ready?IDE_51_MAIN_REV1      SEGMENT CODE 
------                  166     ?PR?rep_all_reg?IDE_51_MAIN_REV1         SEGMENT CODE 
------                  167     ?PR?ReportDiskStatus?IDE_51_MAIN_REV1    SEGMENT CODE 
------                  168     ?DT?ReportDiskStatus?IDE_51_MAIN_REV1    SEGMENT DATA OVERLAYABLE
------                  169     ?PR?ReportErrorStatus?IDE_51_MAIN_REV1   SEGMENT CODE 
------                  170     ?DT?ReportErrorStatus?IDE_51_MAIN_REV1   SEGMENT DATA OVERLAYABLE
------                  171     ?PR?_READ_ATA_REG?IDE_51_MAIN_REV1       SEGMENT CODE 
------                  172     ?DT?_READ_ATA_REG?IDE_51_MAIN_REV1       SEGMENT DATA OVERLAYABLE
------                  173     ?PR?_WRITE_ATA_REG?IDE_51_MAIN_REV1      SEGMENT CODE 
------                  174     ?DT?_WRITE_ATA_REG?IDE_51_MAIN_REV1      SEGMENT DATA OVERLAYABLE
------                  175     ?PR?_delay?IDE_51_MAIN_REV1              SEGMENT CODE 
------                  176     ?PR?Init_serial?IDE_51_MAIN_REV1         SEGMENT CODE 
------                  177     ?PR?_putchar?IDE_51_MAIN_REV1            SEGMENT CODE 
------                  178     ?PR?RxdReceive?IDE_51_MAIN_REV1          SEGMENT CODE 
------                  179     ?CO?IDE_51_MAIN_REV1 SEGMENT CODE 
------                  180     ?DT?IDE_51_MAIN_REV1 SEGMENT DATA 
                        181             EXTRN   CODE (_printf)
                        182             EXTRN   DATA (?_printf?BYTE)
                        183             EXTRN   CODE (?C_STARTUP)
                        184             PUBLIC  Parity
                        185             PUBLIC  DataSpeed
                        186             PUBLIC  StopBits
                        187             PUBLIC  Bytes_write
                        188             PUBLIC  SerialSet
                        189             PUBLIC  DataBits
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE     4

                        190             PUBLIC  Aux_Data
                        191             PUBLIC  RxdReceive
                        192             PUBLIC  _putchar
                        193             PUBLIC  Init_serial
                        194             PUBLIC  _delay
                        195             PUBLIC  _WRITE_ATA_REG
                        196             PUBLIC  _READ_ATA_REG
                        197             PUBLIC  ReportErrorStatus
                        198             PUBLIC  ReportDiskStatus
                        199             PUBLIC  rep_all_reg
                        200             PUBLIC  wait_ATA_ready
                        201             PUBLIC  main
                        202     
------                  203             RSEG  ?DT?ReportErrorStatus?IDE_51_MAIN_REV1
000000                  204     ?ReportErrorStatus?BYTE:
000000                  205     diskerrorcode?441:   DS   1
                        206     
------                  207             RSEG  ?DT?ReportDiskStatus?IDE_51_MAIN_REV1
000000                  208     ?ReportDiskStatus?BYTE:
000000                  209      diskstatus?340:   DS   1
                        210     
------                  211             RSEG  ?DT?_WRITE_ATA_REG?IDE_51_MAIN_REV1
000000                  212     ?_WRITE_ATA_REG?BYTE:
000000                  213            breg?644:   DS   1
                        214     
------                  215             RSEG  ?DT?_READ_ATA_REG?IDE_51_MAIN_REV1
000000                  216     ?_READ_ATA_REG?BYTE:
000000                  217      return_val?543:   DS   1
                        218     
------                  219             RSEG  ?DT?IDE_51_MAIN_REV1
000000                  220            Aux_Data:   DS   16
000010                  221            DataBits:   DS   1
000011                  222           SerialSet:   DS   1
000012                  223         Bytes_write:   DS   2
000014                  224            StopBits:   DS   1
000015                  225           DataSpeed:   DS   2
000017                  226              Parity:   DS   1
                        227     
------                  228             RSEG  ?CO?IDE_51_MAIN_REV1
000000                  229     ?SC_0:
000000 3D3D3D3D         230             DB  '=' ,'=' ,'=' ,'=' ,'=' ,'=' ,'=' ,'=' ,'=' ,'=' 
000004 3D3D3D3D                 
000008 3D3D                     
00000A 3D3D3D3D         231             DB  '=' ,'=' ,'=' ,'=' ,'=' ,'=' ,'=' ,'=' ,'=' ,'=' 
00000E 3D3D3D3D                 
000012 3D3D                     
000014 3D3D3D0A         232             DB  '=' ,'=' ,'=' ,00AH,00DH,000H
000018 0D00                     
                        233     
00001A                  234     ?SC_26:
00001A 38303531         235             DB  '8' ,'0' ,'5' ,'1' ,'-' ,'I' ,'D' ,'E' ,' ' ,'s' 
00001E 2D494445                 
000022 2073                     
000024 79737465         236             DB  'y' ,'s' ,'t' ,'e' ,'m' ,'.' ,'.' ,'.' ,00AH,00DH
000028 6D2E2E2E                 
00002C 0A0D                     
00002E 00               237             DB  000H
                        238     
00002F                  239     ?SC_47:
00002F 56657273         240             DB  'V' ,'e' ,'r' ,'s' ,'i' ,'o' ,'n' ,' ' ,'1' ,'.' 
000033 696F6E20                 
000037 312E                     
000039 30200A0D         241             DB  '0' ,' ' ,00AH,00DH,000H
00003D 00                       
                        242     
00003E                  243     ?SC_62:
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE     5

00003E 31342041         244             DB  '1' ,'4' ,' ' ,'A' ,'p' ,'r' ,'i' ,'l' ,' ' ,'2' 
000042 7072696C                 
000046 2032                     
000048 30303620         245             DB  '0' ,'0' ,'6' ,' ' ,'@' ,'1' ,'9' ,':' ,'3' ,'0' 
00004C 4031393A                 
000050 3330                     
000052 0A0D00           246             DB  00AH,00DH,000H
                        247     
000055                  248     ?SC_85:
000055 6B746B6F         249             DB  'k' ,'t' ,'k' ,'o' ,'s' ,'o' ,'n' ,'@' ,'k' ,'m' 
000059 736F6E40                 
00005D 6B6D                     
00005F 69746C2E         250             DB  'i' ,'t' ,'l' ,'.' ,'a' ,'c' ,'.' ,'t' ,'h' ,00AH
000063 61632E74                 
000067 680A                     
000069 0D00             251             DB  00DH,000H
                        252     
00006B                  253     ?SC_107:
00006B 616C6C20         254             DB  'a' ,'l' ,'l' ,' ' ,'r' ,'i' ,'g' ,'h' ,'t' ,' ' 
00006F 72696768                 
000073 7420                     
000075 72657365         255             DB  'r' ,'e' ,'s' ,'e' ,'r' ,'v' ,'e' ,'d' ,'.' ,00AH
000079 72766564                 
00007D 2E0A                     
00007F 0D00             256             DB  00DH,000H
                        257     
000081                  258     ?SC_129:
000081 0A0D00           259             DB  00AH,00DH,000H
                        260     
000084                  261     ?SC_132:
000084 48617264         262             DB  'H' ,'a' ,'r' ,'d' ,' ' ,'d' ,'i' ,'s' ,'k' ,' ' 
000088 20646973                 
00008C 6B20                     
00008E 64696167         263             DB  'd' ,'i' ,'a' ,'g' ,'.' ,'.' ,'.' ,00AH,00DH,000H
000092 2E2E2E0A                 
000096 0D00                     
                        264     
000098                  265     ?SC_152:
000098 48617264         266             DB  'H' ,'a' ,'r' ,'d' ,'d' ,'i' ,'s' ,'k' ,' ' ,'r' 
00009C 6469736B                 
0000A0 2072                     
0000A2 65616479         267             DB  'e' ,'a' ,'d' ,'y' ,'.' ,'.' ,'.' ,00DH,00AH,000H
0000A6 2E2E2E0D                 
0000AA 0A00                     
                        268     
0000AC                  269     ?SC_172:
0000AC 57524954         270             DB  'W' ,'R' ,'I' ,'T' ,'E' ,'_' ,'A' ,'T' ,'A' ,'_' 
0000B0 455F4154                 
0000B4 415F                     
0000B6 52454728         271             DB  'R' ,'E' ,'G' ,'(' ,'C' ,'O' ,'M' ,'M' ,'A' ,'N' 
0000BA 434F4D4D                 
0000BE 414E                     
0000C0 445F5245         272             DB  'D' ,'_' ,'R' ,'E' ,'G' ,',' ,' ' ,'0' ,'x' ,'E' 
0000C4 472C2030                 
0000C8 7845                     
0000CA 31293B2E         273             DB  '1' ,')' ,';' ,'.' ,'.' ,'.' ,00DH,00AH,000H
0000CE 2E2E0D0A                 
0000D2 00                       
                        274     
0000D3                  275     ?SC_211:
0000D3 57616974         276             DB  'W' ,'a' ,'i' ,'t' ,' ' ,'f' ,'o' ,'r' ,' ' ,'a' 
0000D7 20666F72                 
0000DB 2061                     
0000DD 74612072         277             DB  't' ,'a' ,' ' ,'r' ,'e' ,'a' ,'d' ,'y' ,'.' ,'.' 
0000E1 65616479                 
0000E5 2E2E                     
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE     6

0000E7 2E0D0A00         278             DB  '.' ,00DH,00AH,000H
                        279     
0000EB                  280     ?SC_235:
0000EB 20534543         281             DB  ' ' ,'S' ,'E' ,'C' ,'T' ,'O' ,'R' ,'_' ,'C' ,'O' 
0000EF 544F525F                 
0000F3 434F                     
0000F5 554E5420         282             DB  'U' ,'N' ,'T' ,' ' ,'R' ,'e' ,'g' ,'i' ,'s' ,'t' 
0000F9 52656769                 
0000FD 7374                     
0000FF 6572203D         283             DB  'e' ,'r' ,' ' ,'=' ,' ' ,'%' ,'b' ,'x' ,00DH,00AH
000103 20256278                 
000107 0D0A                     
000109 00               284             DB  000H
                        285     
00010A                  286     ?SC_266:
00010A 20534543         287             DB  ' ' ,'S' ,'E' ,'C' ,'T' ,'O' ,'R' ,'_' ,'N' ,'U' 
00010E 544F525F                 
000112 4E55                     
000114 4D424552         288             DB  'M' ,'B' ,'E' ,'R' ,' ' ,'R' ,'e' ,'g' ,'i' ,'s' 
000118 20526567                 
00011C 6973                     
00011E 74657220         289             DB  't' ,'e' ,'r' ,' ' ,'=' ,' ' ,'%' ,'b' ,'x' ,00DH
000122 3D202562                 
000126 780D                     
000128 0A00             290             DB  00AH,000H
                        291     
00012A                  292     ?SC_298:
00012A 2043594C         293             DB  ' ' ,'C' ,'Y' ,'L' ,'I' ,'N' ,'D' ,'E' ,'R' ,'_' 
00012E 494E4445                 
000132 525F                     
000134 4C4F5720         294             DB  'L' ,'O' ,'W' ,' ' ,'R' ,'e' ,'g' ,'i' ,'s' ,'t' 
000138 52656769                 
00013C 7374                     
00013E 6572203D         295             DB  'e' ,'r' ,' ' ,'=' ,' ' ,'%' ,'b' ,'x' ,00DH,00AH
000142 20256278                 
000146 0D0A                     
000148 00               296             DB  000H
                        297     
000149                  298     ?SC_329:
000149 2043594C         299             DB  ' ' ,'C' ,'Y' ,'L' ,'I' ,'N' ,'D' ,'E' ,'R' ,'_' 
00014D 494E4445                 
000151 525F                     
000153 48492052         300             DB  'H' ,'I' ,' ' ,'R' ,'e' ,'g' ,'i' ,'s' ,'t' ,'e' 
000157 65676973                 
00015B 7465                     
00015D 72203D20         301             DB  'r' ,' ' ,'=' ,' ' ,'%' ,'b' ,'x' ,00DH,00AH,000H
000161 2562780D                 
000165 0A00                     
                        302     
000167                  303     ?SC_359:
000167 20445249         304             DB  ' ' ,'D' ,'R' ,'I' ,'V' ,'E' ,'_' ,'H' ,'E' ,'A' 
00016B 56455F48                 
00016F 4541                     
000171 44205265         305             DB  'D' ,' ' ,'R' ,'e' ,'g' ,'i' ,'s' ,'t' ,'e' ,'r' 
000175 67697374                 
000179 6572                     
00017B 203D2025         306             DB  ' ' ,'=' ,' ' ,'%' ,'b' ,'x' ,00DH,00AH,000H
00017F 62780D0A                 
000183 00                       
                        307     
000184                  308     ?SC_388:
000184 2D2D2D2D         309             DB  '-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' 
000188 2D2D2D2D                 
00018C 2D2D                     
00018E 2D2D2D2D         310             DB  '-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' 
000192 2D2D2D2D                 
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE     7

000196 2D2D                     
000198 2D2D2D2D         311             DB  '-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' 
00019C 2D2D2D2D                 
0001A0 2D2D                     
0001A2 2D2D0A0D         312             DB  '-' ,'-' ,00AH,00DH,000H
0001A6 00                       
                        313     
0001A7                  314     ?SC_423:
0001A7 73746174         315             DB  's' ,'t' ,'a' ,'t' ,'u' ,'s' ,' ' ,'r' ,'e' ,'g' 
0001AB 75732072                 
0001AF 6567                     
0001B1 69737465         316             DB  'i' ,'s' ,'t' ,'e' ,'r' ,' ' ,'v' ,'a' ,'l' ,'u' 
0001B5 72207661                 
0001B9 6C75                     
0001BB 6520203D         317             DB  'e' ,' ' ,' ' ,'=' ,' ' ,'%' ,'b' ,'X' ,00AH,00DH
0001BF 20256258                 
0001C3 0A0D                     
0001C5 00               318             DB  000H
                        319     
0001C6                  320     ?SC_454:
0001C6 42555359         321             DB  'B' ,'U' ,'S' ,'Y' ,' ' ,'D' ,'R' ,'D' ,'Y' ,' ' 
0001CA 20445244                 
0001CE 5920                     
0001D0 20445746         322             DB  ' ' ,'D' ,'W' ,'F' ,' ' ,' ' ,'D' ,'S' ,'C' ,' ' 
0001D4 20204453                 
0001D8 4320                     
0001DA 20445251         323             DB  ' ' ,'D' ,'R' ,'Q' ,' ' ,' ' ,'C' ,'O' ,'R' ,'R' 
0001DE 2020434F                 
0001E2 5252                     
0001E4 20494E44         324             DB  ' ' ,'I' ,'N' ,'D' ,'E' ,'X' ,' ' ,'E' ,'R' ,'R' 
0001E8 45582045                 
0001EC 5252                     
0001EE 4F52200A         325             DB  'O' ,'R' ,' ' ,00AH,00DH,000H
0001F2 0D00                     
                        326     
0001F4                  327     ?SC_500:
0001F4 20202562         328             DB  ' ' ,' ' ,'%' ,'b' ,'X' ,' ' ,' ' ,' ' ,' ' ,'%' 
0001F8 58202020                 
0001FC 2025                     
0001FE 62582020         329             DB  'b' ,'X' ,' ' ,' ' ,' ' ,' ' ,000H
000202 202000                   
                        330     
000205                  331     ?SC_517:
000205 25625820         332             DB  '%' ,'b' ,'X' ,' ' ,' ' ,' ' ,' ' ,'%' ,'b' ,'X' 
000209 20202025                 
00020D 6258                     
00020F 20202020         333             DB  ' ' ,' ' ,' ' ,' ' ,000H
000213 00                       
                        334     
000214                  335     ?SC_532:
000214 25625820         336             DB  '%' ,'b' ,'X' ,' ' ,' ' ,' ' ,' ' ,' ' ,'%' ,'b' 
000218 20202020                 
00021C 2562                     
00021E 58202020         337             DB  'X' ,' ' ,' ' ,' ' ,' ' ,000H
000222 2000                     
                        338     
000224                  339     ?SC_548:
000224 25625820         340             DB  '%' ,'b' ,'X' ,' ' ,' ' ,' ' ,' ' ,' ' ,'%' ,'b' 
000228 20202020                 
00022C 2562                     
00022E 580A0D00         341             DB  'X' ,00AH,00DH,000H
                        342     
000232                  343     ?SC_562:
000232 2D2D2D2D         344             DB  '-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' 
000236 2D2D2D2D                 
00023A 2D2D                     
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE     8

00023C 2D2D2D2D         345             DB  '-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' 
000240 2D2D2D2D                 
000244 2D2D                     
000246 2D2D2D2D         346             DB  '-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' ,'-' 
00024A 2D2D2D2D                 
00024E 2D2D                     
000250 2D2D2D2D         347             DB  '-' ,'-' ,'-' ,'-' ,00AH,00DH,000H
000254 0A0D00                   
                        348     
000257                  349     ?SC_599:
000257 4572726F         350             DB  'E' ,'r' ,'r' ,'o' ,'r' ,' ' ,'r' ,'e' ,'g' ,'i' 
00025B 72207265                 
00025F 6769                     
000261 73746572         351             DB  's' ,'t' ,'e' ,'r' ,' ' ,'v' ,'a' ,'l' ,'u' ,'e' 
000265 2076616C                 
000269 7565                     
00026B 20203D20         352             DB  ' ' ,' ' ,'=' ,' ' ,'%' ,'b' ,'X' ,00AH,00DH,000H
00026F 2562580A                 
000273 0D00                     
                        353     
000275                  354     ?SC_629:
000275 42424B20         355             DB  'B' ,'B' ,'K' ,' ' ,' ' ,'U' ,'N' ,'C' ,' ' ,' ' 
000279 20554E43                 
00027D 2020                     
00027F 202D2D2D         356             DB  ' ' ,'-' ,'-' ,'-' ,'-' ,' ' ,'I' ,'N' ,'D' ,'F' 
000283 2D20494E                 
000287 4446                     
000289 202D2D2D         357             DB  ' ' ,'-' ,'-' ,'-' ,' ' ,' ' ,'A' ,'B' ,'R' ,'T' 
00028D 20204142                 
000291 5254                     
000293 20544B30         358             DB  ' ' ,'T' ,'K' ,'0' ,'N' ,'F' ,' ' ,'A' ,'M' ,'N' 
000297 4E462041                 
00029B 4D4E                     
00029D 460A0D00         359             DB  'F' ,00AH,00DH,000H
                        360     
                        361     ; #include <REG51AC2.h>
                        362     ; #include <stdio.h>
                        363     ; 
                        364     ; #define N 'N'
                        365     ; #define E 'E'
                        366     ; #define O 'O'
                        367     ; #define n 'N'
                        368     ; #define e 'E'
                        369     ; #define o 'O'
                        370     ; 
                        371     ; #define ATA_ST_ERR                    0x01
                        372     ; #define ATA_ST_INDEX          0x02 >> 1 
                        373     ; #define ATA_ST_CORR                   0x04 >> 2
                        374     ; #define ATA_ST_DRQ                    0x08 >> 3
                        375     ; #define ATA_ST_DSC                    0x10 >> 4
                        376     ; #define ATA_ST_DWF                    0x20 >> 5
                        377     ; #define ATA_ST_RDY                    0x40 >> 6
                        378     ; #define ATA_ST_BUSY                   0x80 >> 7
                        379     ; 
                        380     ; #define ATA_ERR_AMNF          0x01
                        381     ; #define ATA_ERR_TK0NF         0x02 >> 1
                        382     ; #define ATA_ERR_ABRT          0x04 >> 2
                        383     ; #define ATA_ERR_MCR                   0x08 >> 3
                        384     ; #define ATA_ERR_IDNF          0x10 >> 4
                        385     ; #define ATA_ERR_MC                    0x20 >> 5
                        386     ; #define ATA_ERR_UNC                   0x40 >> 6
                        387     ; #define ATA_ERR_BBK                   0x80 >> 7
                        388     ; 
                        389     ; #define DATA_PORT                     0xF0
                        390     ; #define ERROR_REG                     0xF1
                        391     ; #define SECTOR_COUNT          0xF2
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE     9

                        392     ; #define SECTOR_NUMBER         0xF3
                        393     ; #define CYLINDER_LOW          0xF4
                        394     ; #define CYLINDER_HI                   0xF5
                        395     ; #define DRIVE_HEAD                    0xF6
                        396     ; #define STATUS_REG                    0xF7
                        397     ; #define COMMAND_REG                   0xF7
                        398     ; 
                        399     ; unsigned int  DataSpeed;
                        400     ; unsigned char DataBits;
                        401     ; unsigned char Parity;
                        402     ; unsigned char StopBits;
                        403     ; unsigned char SerialSet;
                        404     ; 
                        405     ; 
                        406     ; void Init_serial();
                        407     ; unsigned int Bytes_write; // len data_ethernet
                        408     ; unsigned char Aux_Data[16];           //' TCP AUX DATA = INTERGER < PACKET - 55 BYTE A
                               ND CHECKRAM
                        409     ; 
                        410     ; sbit RESETn = P1^7;
                        411     ; sbit RDn    = P1^6;
                        412     ; sbit WRn    = P1^5;
                        413     ; sbit CS1n   = P1^4;
                        414     ; sbit CS0n   = P1^3;
                        415     ; sbit A2     = P1^2;
                        416     ; sbit A1     = P1^1;
                        417     ; sbit A0     = P1^0;
                        418     ; sbit tstbit = P4^0;
                        419     ; 
                        420     ; void delay(unsigned int);
                        421     ; unsigned char READ_ATA_REG (unsigned char REG );
                        422     ; void WRITE_ATA_REG(unsigned char breg, unsigned char value);
                        423     ; void ReportDiskStatus();
                        424     ; void rep_all_reg ();
                        425     ; void ReportErrorStatus();
                        426     ; void wait_ATA_ready();
                        427     ; 
                        428     ; 
                        429     ; main()
                        430     
------                  431             RSEG  ?PR?main?IDE_51_MAIN_REV1
000000                  432     main:
                        433             USING   0
                        434                             ; SOURCE LINE # 69
                        435     ; {
                        436                             ; SOURCE LINE # 70
                        437     ; 
                        438     ;       
                        439     ;       AUXR = 0x0C;             //' T89C51AC2 CONFIG SELECT IRAM = 1024 BYTE.
                        440                             ; SOURCE LINE # 73
000000 758E0C           441             MOV     AUXR,#0CH
                        442     ;       Init_serial(); //' SERIAL SETTING.
                        443                             ; SOURCE LINE # 74
000003 120000     F     444             LCALL   Init_serial
                        445     ;       EA = 1;                  //' ENABLE INTERRUPT.
                        446                             ; SOURCE LINE # 75
000006 D2AF             447             SETB    EA
                        448     ;     ES = 1;                  //' ENABLE SERIAL INTERRUPT.
                        449                             ; SOURCE LINE # 76
000008 D2AC             450             SETB    ES
                        451     ;       
                        452     ;       P1 = 0xf8;
                        453                             ; SOURCE LINE # 78
00000A 7590F8           454             MOV     P1,#0F8H
                        455     ;       P2 = 0;
                        456                             ; SOURCE LINE # 79
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE    10

00000D E4               457             CLR     A
00000E F5A0             458             MOV     P2,A
                        459     ; 
                        460     ;       Bytes_write = 0;
                        461                             ; SOURCE LINE # 81
000010 F500       F     462             MOV     Bytes_write,A
000012 F500       F     463             MOV     Bytes_write+01H,A
                        464     ;       printf("=======================\n\r");
                        465                             ; SOURCE LINE # 82
000014 7BFF             466             MOV     R3,#0FFH
000016 7A00       F     467             MOV     R2,#HIGH (?SC_0)
000018 7900       F     468             MOV     R1,#LOW (?SC_0)
00001A 120000     E     469             LCALL   _printf
                        470     ;       printf("8051-IDE system...\n\r");
                        471                             ; SOURCE LINE # 83
00001D 7BFF             472             MOV     R3,#0FFH
00001F 7A00       F     473             MOV     R2,#HIGH (?SC_26)
000021 7900       F     474             MOV     R1,#LOW (?SC_26)
000023 120000     E     475             LCALL   _printf
                        476     ;       printf("Version 1.0 \n\r");
                        477                             ; SOURCE LINE # 84
000026 7BFF             478             MOV     R3,#0FFH
000028 7A00       F     479             MOV     R2,#HIGH (?SC_47)
00002A 7900       F     480             MOV     R1,#LOW (?SC_47)
00002C 120000     E     481             LCALL   _printf
                        482     ;       printf("14 April 2006 @19:30\n\r");
                        483                             ; SOURCE LINE # 85
00002F 7BFF             484             MOV     R3,#0FFH
000031 7A00       F     485             MOV     R2,#HIGH (?SC_62)
000033 7900       F     486             MOV     R1,#LOW (?SC_62)
000035 120000     E     487             LCALL   _printf
                        488     ;       printf("ktkoson@kmitl.ac.th\n\r");
                        489                             ; SOURCE LINE # 86
000038 7BFF             490             MOV     R3,#0FFH
00003A 7A00       F     491             MOV     R2,#HIGH (?SC_85)
00003C 7900       F     492             MOV     R1,#LOW (?SC_85)
00003E 120000     E     493             LCALL   _printf
                        494     ;       printf("all right reserved.\n\r");
                        495                             ; SOURCE LINE # 87
000041 7BFF             496             MOV     R3,#0FFH
000043 7A00       F     497             MOV     R2,#HIGH (?SC_107)
000045 7900       F     498             MOV     R1,#LOW (?SC_107)
000047 120000     E     499             LCALL   _printf
                        500     ;       printf("=======================\n\r");
                        501                             ; SOURCE LINE # 88
00004A 7BFF             502             MOV     R3,#0FFH
00004C 7A00       F     503             MOV     R2,#HIGH (?SC_0)
00004E 7900       F     504             MOV     R1,#LOW (?SC_0)
000050 120000     E     505             LCALL   _printf
                        506     ;       printf("\n\r");
                        507                             ; SOURCE LINE # 89
000053 7BFF             508             MOV     R3,#0FFH
000055 7A00       F     509             MOV     R2,#HIGH (?SC_129)
000057 7900       F     510             MOV     R1,#LOW (?SC_129)
000059 120000     E     511             LCALL   _printf
                        512     ; 
                        513     ; 
                        514     ;       printf("Hard disk diag...\n\r");
                        515                             ; SOURCE LINE # 92
00005C 7BFF             516             MOV     R3,#0FFH
00005E 7A00       F     517             MOV     R2,#HIGH (?SC_132)
000060 7900       F     518             MOV     R1,#LOW (?SC_132)
000062 120000     E     519             LCALL   _printf
                        520     ;       printf("\n\r");
                        521                             ; SOURCE LINE # 93
000065 7BFF             522             MOV     R3,#0FFH
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE    11

000067 7A00       F     523             MOV     R2,#HIGH (?SC_129)
000069 7900       F     524             MOV     R1,#LOW (?SC_129)
00006B 120000     E     525             LCALL   _printf
                        526     ; 
                        527     ;       RESETn = 0;
                        528                             ; SOURCE LINE # 95
00006E C297             529             CLR     RESETn
                        530     ;       delay(100);
                        531                             ; SOURCE LINE # 96
000070 7F64             532             MOV     R7,#064H
000072 7E00             533             MOV     R6,#00H
000074 120000     F     534             LCALL   _delay
                        535     ;       RESETn = 1;
                        536                             ; SOURCE LINE # 97
000077 D297             537             SETB    RESETn
                        538     ;       delay(100);
                        539                             ; SOURCE LINE # 98
000079 7F64             540             MOV     R7,#064H
00007B 7E00             541             MOV     R6,#00H
00007D 120000     F     542             LCALL   _delay
                        543     ; 
                        544     ;               
                        545     ;       wait_ATA_ready();       
                        546                             ; SOURCE LINE # 101
000080 120000     F     547             LCALL   wait_ATA_ready
                        548     ;       printf("Harddisk ready...\r\n");
                        549                             ; SOURCE LINE # 102
000083 7BFF             550             MOV     R3,#0FFH
000085 7A00       F     551             MOV     R2,#HIGH (?SC_152)
000087 7900       F     552             MOV     R1,#LOW (?SC_152)
000089 120000     E     553             LCALL   _printf
                        554     ;       WRITE_ATA_REG(0xf6,0xe0);
                        555                             ; SOURCE LINE # 103
00008C 7DE0             556             MOV     R5,#0E0H
00008E 7FF6             557             MOV     R7,#0F6H
000090 120000     F     558             LCALL   _WRITE_ATA_REG
                        559     ;       wait_ATA_ready();       
                        560                             ; SOURCE LINE # 104
000093 120000     F     561             LCALL   wait_ATA_ready
                        562     ; 
                        563     ; 
                        564     ;       rep_all_reg ();
                        565                             ; SOURCE LINE # 107
000096 120000     F     566             LCALL   rep_all_reg
                        567     ; 
                        568     ;    printf("WRITE_ATA_REG(COMMAND_REG, 0xE1);...\r\n");
                        569                             ; SOURCE LINE # 109
000099 7BFF             570             MOV     R3,#0FFH
00009B 7A00       F     571             MOV     R2,#HIGH (?SC_172)
00009D 7900       F     572             MOV     R1,#LOW (?SC_172)
00009F 120000     E     573             LCALL   _printf
                        574     ; 
                        575     ;    WRITE_ATA_REG(COMMAND_REG, 0xE1);
                        576                             ; SOURCE LINE # 111
0000A2 7DE1             577             MOV     R5,#0E1H
0000A4 7FF7             578             MOV     R7,#0F7H
0000A6 120000     F     579             LCALL   _WRITE_ATA_REG
                        580     ;    wait_ATA_ready();  
                        581                             ; SOURCE LINE # 112
0000A9 120000     F     582             LCALL   wait_ATA_ready
                        583     ; 
                        584     ;    WRITE_ATA_REG(COMMAND_REG, 0xEC);
                        585                             ; SOURCE LINE # 114
0000AC 7DEC             586             MOV     R5,#0ECH
0000AE 7FF7             587             MOV     R7,#0F7H
0000B0 120000     F     588             LCALL   _WRITE_ATA_REG
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE    12

                        589     ;    wait_ATA_ready();  
                        590                             ; SOURCE LINE # 115
0000B3 120000     F     591             LCALL   wait_ATA_ready
0000B6                  592     ?C0001:
                        593     ;       while(!(READ_ATA_REG(STATUS_REG) & 0x08));        // wait for ready
                        594                             ; SOURCE LINE # 116
0000B6 7FF7             595             MOV     R7,#0F7H
0000B8 120000     F     596             LCALL   _READ_ATA_REG
0000BB EF               597             MOV     A,R7
0000BC 30E3F7           598             JNB     ACC.3,?C0001
0000BF                  599     ?C0002:
                        600     ; 
                        601     ;    
                        602     ;    rep_all_reg ();
                        603                             ; SOURCE LINE # 119
0000BF 120000     F     604             LCALL   rep_all_reg
0000C2                  605     ?C0003:
                        606     ; 
                        607     ; 
                        608     ;     while(1){
                        609                             ; SOURCE LINE # 122
                        610     ;               tstbit = !tstbit;
                        611                             ; SOURCE LINE # 123
0000C2 B2C0             612             CPL     tstbit
                        613     ;               delay(10);
                        614                             ; SOURCE LINE # 124
0000C4 7F0A             615             MOV     R7,#0AH
0000C6 7E00             616             MOV     R6,#00H
0000C8 120000     F     617             LCALL   _delay
                        618     ;       }
                        619                             ; SOURCE LINE # 125
0000CB 80F5             620             SJMP    ?C0003
                        621     ; END OF main
                        622     
                        623     ; }
                        624     ; 
                        625     ; void wait_ATA_ready()
                        626     
------                  627             RSEG  ?PR?wait_ATA_ready?IDE_51_MAIN_REV1
000000                  628     wait_ATA_ready:
                        629             USING   0
                        630                             ; SOURCE LINE # 128
                        631     ; {
                        632                             ; SOURCE LINE # 129
                        633     ;       printf("Wait for ata ready...\r\n");
                        634                             ; SOURCE LINE # 130
000000 7BFF             635             MOV     R3,#0FFH
000002 7A00       F     636             MOV     R2,#HIGH (?SC_211)
000004 7900       F     637             MOV     R1,#LOW (?SC_211)
000006 120000     E     638             LCALL   _printf
000009                  639     ?C0006:
                        640     ;       while( (READ_ATA_REG(STATUS_REG) & 0x80)) ;       // wait for not busy
                        641                             ; SOURCE LINE # 131
000009 7FF7             642             MOV     R7,#0F7H
00000B 120000     F     643             LCALL   _READ_ATA_REG
00000E EF               644             MOV     A,R7
00000F 20E7F7           645             JB      ACC.7,?C0006
000012                  646     ?C0008:
                        647     ;       while(!(READ_ATA_REG(STATUS_REG) & 0x40));        // wait for ready
                        648                             ; SOURCE LINE # 132
000012 7FF7             649             MOV     R7,#0F7H
000014 120000     F     650             LCALL   _READ_ATA_REG
000017 EF               651             MOV     A,R7
000018 30E6F7           652             JNB     ACC.6,?C0008
                        653     ; 
                        654     ; }
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE    13

                        655                             ; SOURCE LINE # 134
00001B                  656     ?C0010:
00001B 22               657             RET     
                        658     ; END OF wait_ATA_ready
                        659     
                        660     ; 
                        661     ; 
                        662     ; void rep_all_reg ()
                        663     
------                  664             RSEG  ?PR?rep_all_reg?IDE_51_MAIN_REV1
000000                  665     rep_all_reg:
                        666             USING   0
                        667                             ; SOURCE LINE # 137
                        668     ; {
                        669                             ; SOURCE LINE # 138
                        670     ;       ReportDiskStatus();
                        671                             ; SOURCE LINE # 139
000000 120000     F     672             LCALL   ReportDiskStatus
                        673     ;       ReportErrorStatus();
                        674                             ; SOURCE LINE # 140
000003 120000     F     675             LCALL   ReportErrorStatus
                        676     ;       printf(" SECTOR_COUNT Register = %bx\r\n", READ_ATA_REG(SECTOR_COUNT));
                        677                             ; SOURCE LINE # 141
000006 7FF2             678             MOV     R7,#0F2H
000008 120000     F     679             LCALL   _READ_ATA_REG
00000B 8F00       E     680             MOV     ?_printf?BYTE+03H,R7
00000D 7BFF             681             MOV     R3,#0FFH
00000F 7A00       F     682             MOV     R2,#HIGH (?SC_235)
000011 7900       F     683             MOV     R1,#LOW (?SC_235)
000013 120000     E     684             LCALL   _printf
                        685     ;       printf(" SECTOR_NUMBER Register = %bx\r\n", READ_ATA_REG(SECTOR_NUMBER));
                        686                             ; SOURCE LINE # 142
000016 7FF3             687             MOV     R7,#0F3H
000018 120000     F     688             LCALL   _READ_ATA_REG
00001B 8F00       E     689             MOV     ?_printf?BYTE+03H,R7
00001D 7BFF             690             MOV     R3,#0FFH
00001F 7A00       F     691             MOV     R2,#HIGH (?SC_266)
000021 7900       F     692             MOV     R1,#LOW (?SC_266)
000023 120000     E     693             LCALL   _printf
                        694     ;       printf(" CYLINDER_LOW Register = %bx\r\n", READ_ATA_REG(CYLINDER_LOW));
                        695                             ; SOURCE LINE # 143
000026 7FF4             696             MOV     R7,#0F4H
000028 120000     F     697             LCALL   _READ_ATA_REG
00002B 8F00       E     698             MOV     ?_printf?BYTE+03H,R7
00002D 7BFF             699             MOV     R3,#0FFH
00002F 7A00       F     700             MOV     R2,#HIGH (?SC_298)
000031 7900       F     701             MOV     R1,#LOW (?SC_298)
000033 120000     E     702             LCALL   _printf
                        703     ;       printf(" CYLINDER_HI Register = %bx\r\n", READ_ATA_REG(CYLINDER_HI));
                        704                             ; SOURCE LINE # 144
000036 7FF5             705             MOV     R7,#0F5H
000038 120000     F     706             LCALL   _READ_ATA_REG
00003B 8F00       E     707             MOV     ?_printf?BYTE+03H,R7
00003D 7BFF             708             MOV     R3,#0FFH
00003F 7A00       F     709             MOV     R2,#HIGH (?SC_329)
000041 7900       F     710             MOV     R1,#LOW (?SC_329)
000043 120000     E     711             LCALL   _printf
                        712     ;       printf(" CYLINDER_LOW Register = %bx\r\n", READ_ATA_REG(CYLINDER_LOW));
                        713                             ; SOURCE LINE # 145
000046 7FF4             714             MOV     R7,#0F4H
000048 120000     F     715             LCALL   _READ_ATA_REG
00004B 8F00       E     716             MOV     ?_printf?BYTE+03H,R7
00004D 7BFF             717             MOV     R3,#0FFH
00004F 7A00       F     718             MOV     R2,#HIGH (?SC_298)
000051 7900       F     719             MOV     R1,#LOW (?SC_298)
000053 120000     E     720             LCALL   _printf
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE    14

                        721     ;       printf(" CYLINDER_LOW Register = %bx\r\n", READ_ATA_REG(CYLINDER_LOW));
                        722                             ; SOURCE LINE # 146
000056 7FF4             723             MOV     R7,#0F4H
000058 120000     F     724             LCALL   _READ_ATA_REG
00005B 8F00       E     725             MOV     ?_printf?BYTE+03H,R7
00005D 7BFF             726             MOV     R3,#0FFH
00005F 7A00       F     727             MOV     R2,#HIGH (?SC_298)
000061 7900       F     728             MOV     R1,#LOW (?SC_298)
000063 120000     E     729             LCALL   _printf
                        730     ;       printf(" DRIVE_HEAD Register = %bx\r\n", READ_ATA_REG(DRIVE_HEAD));
                        731                             ; SOURCE LINE # 147
000066 7FF6             732             MOV     R7,#0F6H
000068 120000     F     733             LCALL   _READ_ATA_REG
00006B 8F00       E     734             MOV     ?_printf?BYTE+03H,R7
00006D 7BFF             735             MOV     R3,#0FFH
00006F 7A00       F     736             MOV     R2,#HIGH (?SC_359)
000071 7900       F     737             MOV     R1,#LOW (?SC_359)
000073 020000     E     738             LJMP    _printf
                        739     ; END OF rep_all_reg
                        740     
                        741     ; 
                        742     ; 
                        743     ; }
                        744     ; void ReportDiskStatus()
                        745     
------                  746             RSEG  ?PR?ReportDiskStatus?IDE_51_MAIN_REV1
000000                  747     ReportDiskStatus:
                        748             USING   0
                        749                             ; SOURCE LINE # 151
                        750     ; {
                        751                             ; SOURCE LINE # 152
                        752     ;       unsigned char diskstatus;
                        753     ;       diskstatus = READ_ATA_REG(STATUS_REG);
                        754                             ; SOURCE LINE # 154
000000 7FF7             755             MOV     R7,#0F7H
000002 120000     F     756             LCALL   _READ_ATA_REG
000005 8F00       F     757             MOV     diskstatus?340,R7
                        758     ;       printf("--------------------------------\n\r");
                        759                             ; SOURCE LINE # 155
000007 7BFF             760             MOV     R3,#0FFH
000009 7A00       F     761             MOV     R2,#HIGH (?SC_388)
00000B 7900       F     762             MOV     R1,#LOW (?SC_388)
00000D 120000     E     763             LCALL   _printf
                        764     ;       printf("status register value  = %bX\n\r",diskstatus);
                        765                             ; SOURCE LINE # 156
000010 7BFF             766             MOV     R3,#0FFH
000012 7A00       F     767             MOV     R2,#HIGH (?SC_423)
000014 7900       F     768             MOV     R1,#LOW (?SC_423)
000016 850000     E     769             MOV     ?_printf?BYTE+03H,diskstatus?340
000019 120000     E     770             LCALL   _printf
                        771     ;       printf("BUSY DRDY  DWF  DSC  DRQ  CORR INDEX ERROR \n\r");
                        772                             ; SOURCE LINE # 157
00001C 7BFF             773             MOV     R3,#0FFH
00001E 7A00       F     774             MOV     R2,#HIGH (?SC_454)
000020 7900       F     775             MOV     R1,#LOW (?SC_454)
000022 120000     E     776             LCALL   _printf
                        777     ;       printf("  %bX    %bX    ",diskstatus >> 7 &1  ,diskstatus >> 6 &1);
                        778                             ; SOURCE LINE # 158
000025 7BFF             779             MOV     R3,#0FFH
000027 7A00       F     780             MOV     R2,#HIGH (?SC_500)
000029 7900       F     781             MOV     R1,#LOW (?SC_500)
00002B E500       F     782             MOV     A,diskstatus?340
00002D C4               783             SWAP    A
00002E 13               784             RRC     A
00002F 13               785             RRC     A
000030 13               786             RRC     A
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE    15

000031 5401             787             ANL     A,#01H
000033 F500       E     788             MOV     ?_printf?BYTE+03H,A
000035 E500       F     789             MOV     A,diskstatus?340
000037 C4               790             SWAP    A
000038 13               791             RRC     A
000039 13               792             RRC     A
00003A 5401             793             ANL     A,#01H
00003C F500       E     794             MOV     ?_printf?BYTE+04H,A
00003E 120000     E     795             LCALL   _printf
                        796     ;       printf("%bX    %bX    "  ,diskstatus >> 5 &1,diskstatus >> 4 &1);
                        797                             ; SOURCE LINE # 159
000041 7BFF             798             MOV     R3,#0FFH
000043 7A00       F     799             MOV     R2,#HIGH (?SC_517)
000045 7900       F     800             MOV     R1,#LOW (?SC_517)
000047 E500       F     801             MOV     A,diskstatus?340
000049 C4               802             SWAP    A
00004A 13               803             RRC     A
00004B 5401             804             ANL     A,#01H
00004D F500       E     805             MOV     ?_printf?BYTE+03H,A
00004F E500       F     806             MOV     A,diskstatus?340
000051 C4               807             SWAP    A
000052 5401             808             ANL     A,#01H
000054 F500       E     809             MOV     ?_printf?BYTE+04H,A
000056 120000     E     810             LCALL   _printf
                        811     ;       printf("%bX     %bX    " ,diskstatus >> 3 &1,diskstatus >> 2 &1);
                        812                             ; SOURCE LINE # 160
000059 7BFF             813             MOV     R3,#0FFH
00005B 7A00       F     814             MOV     R2,#HIGH (?SC_532)
00005D 7900       F     815             MOV     R1,#LOW (?SC_532)
00005F E500       F     816             MOV     A,diskstatus?340
000061 13               817             RRC     A
000062 13               818             RRC     A
000063 13               819             RRC     A
000064 5401             820             ANL     A,#01H
000066 F500       E     821             MOV     ?_printf?BYTE+03H,A
000068 E500       F     822             MOV     A,diskstatus?340
00006A 13               823             RRC     A
00006B 13               824             RRC     A
00006C 5401             825             ANL     A,#01H
00006E F500       E     826             MOV     ?_printf?BYTE+04H,A
000070 120000     E     827             LCALL   _printf
                        828     ;       printf("%bX     %bX\n\r" ,diskstatus >> 1 &1,diskstatus &1);
                        829                             ; SOURCE LINE # 161
000073 7BFF             830             MOV     R3,#0FFH
000075 7A00       F     831             MOV     R2,#HIGH (?SC_548)
000077 7900       F     832             MOV     R1,#LOW (?SC_548)
000079 E500       F     833             MOV     A,diskstatus?340
00007B C3               834             CLR     C
00007C 13               835             RRC     A
00007D 5401             836             ANL     A,#01H
00007F F500       E     837             MOV     ?_printf?BYTE+03H,A
000081 E500       F     838             MOV     A,diskstatus?340
000083 5401             839             ANL     A,#01H
000085 F500       E     840             MOV     ?_printf?BYTE+04H,A
000087 120000     E     841             LCALL   _printf
                        842     ;       delay (100);
                        843                             ; SOURCE LINE # 162
00008A 7F64             844             MOV     R7,#064H
00008C 7E00             845             MOV     R6,#00H
00008E 020000     F     846             LJMP    _delay
                        847     ; END OF ReportDiskStatus
                        848     
                        849     ; 
                        850     ; }
                        851     ; 
                        852     ; void ReportErrorStatus()
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE    16

                        853     
------                  854             RSEG  ?PR?ReportErrorStatus?IDE_51_MAIN_REV1
000000                  855     ReportErrorStatus:
                        856             USING   0
                        857                             ; SOURCE LINE # 166
                        858     ; {
                        859                             ; SOURCE LINE # 167
                        860     ;       unsigned char diskerrorcode;
                        861     ;       diskerrorcode = READ_ATA_REG(ERROR_REG);
                        862                             ; SOURCE LINE # 169
000000 7FF1             863             MOV     R7,#0F1H
000002 120000     F     864             LCALL   _READ_ATA_REG
000005 8F00       F     865             MOV     diskerrorcode?441,R7
                        866     ; 
                        867     ;       printf("----------------------------------\n\r");
                        868                             ; SOURCE LINE # 171
000007 7BFF             869             MOV     R3,#0FFH
000009 7A00       F     870             MOV     R2,#HIGH (?SC_562)
00000B 7900       F     871             MOV     R1,#LOW (?SC_562)
00000D 120000     E     872             LCALL   _printf
                        873     ;       printf("Error register value  = %bX\n\r",diskerrorcode);
                        874                             ; SOURCE LINE # 172
000010 7BFF             875             MOV     R3,#0FFH
000012 7A00       F     876             MOV     R2,#HIGH (?SC_599)
000014 7900       F     877             MOV     R1,#LOW (?SC_599)
000016 850000     E     878             MOV     ?_printf?BYTE+03H,diskerrorcode?441
000019 120000     E     879             LCALL   _printf
                        880     ;       printf("BBK  UNC   ---- INDF ---  ABRT TK0NF AMNF\n\r");
                        881                             ; SOURCE LINE # 173
00001C 7BFF             882             MOV     R3,#0FFH
00001E 7A00       F     883             MOV     R2,#HIGH (?SC_629)
000020 7900       F     884             MOV     R1,#LOW (?SC_629)
000022 120000     E     885             LCALL   _printf
                        886     ;       printf("  %bX    %bX    ",diskerrorcode >> 7 &1  ,diskerrorcode >> 6 &1);
                        887                             ; SOURCE LINE # 174
000025 7BFF             888             MOV     R3,#0FFH
000027 7A00       F     889             MOV     R2,#HIGH (?SC_500)
000029 7900       F     890             MOV     R1,#LOW (?SC_500)
00002B E500       F     891             MOV     A,diskerrorcode?441
00002D C4               892             SWAP    A
00002E 13               893             RRC     A
00002F 13               894             RRC     A
000030 13               895             RRC     A
000031 5401             896             ANL     A,#01H
000033 F500       E     897             MOV     ?_printf?BYTE+03H,A
000035 E500       F     898             MOV     A,diskerrorcode?441
000037 C4               899             SWAP    A
000038 13               900             RRC     A
000039 13               901             RRC     A
00003A 5401             902             ANL     A,#01H
00003C F500       E     903             MOV     ?_printf?BYTE+04H,A
00003E 120000     E     904             LCALL   _printf
                        905     ;       printf("%bX    %bX    "  ,diskerrorcode >> 5 &1   ,diskerrorcode >> 4 &1);
                        906                             ; SOURCE LINE # 175
000041 7BFF             907             MOV     R3,#0FFH
000043 7A00       F     908             MOV     R2,#HIGH (?SC_517)
000045 7900       F     909             MOV     R1,#LOW (?SC_517)
000047 E500       F     910             MOV     A,diskerrorcode?441
000049 C4               911             SWAP    A
00004A 13               912             RRC     A
00004B 5401             913             ANL     A,#01H
00004D F500       E     914             MOV     ?_printf?BYTE+03H,A
00004F E500       F     915             MOV     A,diskerrorcode?441
000051 C4               916             SWAP    A
000052 5401             917             ANL     A,#01H
000054 F500       E     918             MOV     ?_printf?BYTE+04H,A
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE    17

000056 120000     E     919             LCALL   _printf
                        920     ;       printf("%bX     %bX    " ,diskerrorcode >> 3 &1  ,diskerrorcode >> 2 &1);
                        921                             ; SOURCE LINE # 176
000059 7BFF             922             MOV     R3,#0FFH
00005B 7A00       F     923             MOV     R2,#HIGH (?SC_532)
00005D 7900       F     924             MOV     R1,#LOW (?SC_532)
00005F E500       F     925             MOV     A,diskerrorcode?441
000061 13               926             RRC     A
000062 13               927             RRC     A
000063 13               928             RRC     A
000064 5401             929             ANL     A,#01H
000066 F500       E     930             MOV     ?_printf?BYTE+03H,A
000068 E500       F     931             MOV     A,diskerrorcode?441
00006A 13               932             RRC     A
00006B 13               933             RRC     A
00006C 5401             934             ANL     A,#01H
00006E F500       E     935             MOV     ?_printf?BYTE+04H,A
000070 120000     E     936             LCALL   _printf
                        937     ;       printf("%bX     %bX\n\r" ,diskerrorcode >> 1 &1 ,diskerrorcode  &1);
                        938                             ; SOURCE LINE # 177
000073 7BFF             939             MOV     R3,#0FFH
000075 7A00       F     940             MOV     R2,#HIGH (?SC_548)
000077 7900       F     941             MOV     R1,#LOW (?SC_548)
000079 E500       F     942             MOV     A,diskerrorcode?441
00007B C3               943             CLR     C
00007C 13               944             RRC     A
00007D 5401             945             ANL     A,#01H
00007F F500       E     946             MOV     ?_printf?BYTE+03H,A
000081 E500       F     947             MOV     A,diskerrorcode?441
000083 5401             948             ANL     A,#01H
000085 F500       E     949             MOV     ?_printf?BYTE+04H,A
000087 020000     E     950             LJMP    _printf
                        951     ; END OF ReportErrorStatus
                        952     
                        953     ; }
                        954     ; 
                        955     ; 
                        956     ; unsigned char READ_ATA_REG (unsigned char REG )
                        957     
------                  958             RSEG  ?PR?_READ_ATA_REG?IDE_51_MAIN_REV1
000000                  959     _READ_ATA_REG:
                        960             USING   0
                        961                             ; SOURCE LINE # 181
                        962     ;---- Variable 'REG?542' assigned to Register 'R7' ----
                        963     ; {
                        964                             ; SOURCE LINE # 182
                        965     ;       unsigned char return_val;
                        966     ;       P1 = REG;
                        967                             ; SOURCE LINE # 184
000000 8F90             968             MOV     P1,R7
                        969     ;       delay(50);
                        970                             ; SOURCE LINE # 185
000002 120000     F     971             LCALL   L?0027
                        972     ;       RDn = 0;
                        973                             ; SOURCE LINE # 186
000005 C296             974             CLR     RDn
                        975     ;       delay(50);
                        976                             ; SOURCE LINE # 187
000007 120000     F     977             LCALL   L?0027
                        978     ;       return_val = P0;
                        979                             ; SOURCE LINE # 188
00000A 858000     F     980             MOV     return_val?543,P0
                        981     ;       delay(50);
                        982                             ; SOURCE LINE # 189
00000D 120000     F     983             LCALL   L?0028
                        984     ;       RDn = 1;
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE    18

                        985                             ; SOURCE LINE # 190
000010 D296             986             SETB    RDn
                        987     ;       delay(50);
                        988                             ; SOURCE LINE # 191
000012 120000     F     989             LCALL   L?0028
                        990     ;       return return_val;
                        991                             ; SOURCE LINE # 192
000015 AF00       F     992             MOV     R7,return_val?543
                        993     ; }                
                        994                             ; SOURCE LINE # 193
000017                  995     ?C0014:
000017 22               996             RET     
                        997     ; END OF _READ_ATA_REG
                        998     
                        999     ; 
                       1000     ; void WRITE_ATA_REG(unsigned char breg, unsigned char value)
                       1001     
------                 1002             RSEG  ?PR?_WRITE_ATA_REG?IDE_51_MAIN_REV1
000000                 1003     _WRITE_ATA_REG:
                       1004             USING   0
                       1005                             ; SOURCE LINE # 195
000000 8F00       F    1006             MOV     breg?644,R7
                       1007     ;---- Variable 'value?645' assigned to Register 'R5' ----
                       1008     ; {
                       1009                             ; SOURCE LINE # 196
                       1010     ;       P0 = value;
                       1011                             ; SOURCE LINE # 197
000002 8D80            1012             MOV     P0,R5
                       1013     ;       delay(100);
                       1014                             ; SOURCE LINE # 198
000004 7F64            1015             MOV     R7,#064H
000006 7E00            1016             MOV     R6,#00H
000008 120000     F    1017             LCALL   _delay
                       1018     ;       P1 = breg;
                       1019                             ; SOURCE LINE # 199
00000B 850090     F    1020             MOV     P1,breg?644
                       1021     ;       delay(200);
                       1022                             ; SOURCE LINE # 200
00000E 7FC8            1023             MOV     R7,#0C8H
000010 7E00            1024             MOV     R6,#00H
000012 120000     F    1025             LCALL   _delay
                       1026     ;       WRn = 0;
                       1027                             ; SOURCE LINE # 201
000015 C295            1028             CLR     WRn
                       1029     ;       delay(50);
                       1030                             ; SOURCE LINE # 202
000017 120000     F    1031             LCALL   L?0028
                       1032     ;       WRn = 1;
                       1033                             ; SOURCE LINE # 203
00001A D295            1034             SETB    WRn
                       1035     ;       delay(50);
                       1036                             ; SOURCE LINE # 204
00001C 7F32            1037             MOV     R7,#032H
00001E 7E00            1038             MOV     R6,#00H
000020 020000     F    1039             LJMP    _delay
                       1040     ; END OF _WRITE_ATA_REG
                       1041     
                       1042     ; 
                       1043     ; 
                       1044     ; 
                       1045     ; }
                       1046     ; 
                       1047     ; 
                       1048     ; void delay(unsigned int dd)
                       1049     
------                 1050             RSEG  ?PR?_delay?IDE_51_MAIN_REV1
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE    19

000000                 1051     L?0027:
                       1052             USING   0
000000                 1053     L?0028:
000000 7F32            1054             MOV     R7,#032H
000002 7E00            1055             MOV     R6,#00H
000004                 1056     _delay:
                       1057             USING   0
                       1058                             ; SOURCE LINE # 211
                       1059     ;---- Variable 'dd?746' assigned to Register 'R6/R7' ----
                       1060     ; {
                       1061                             ; SOURCE LINE # 212
000004                 1062     ?C0016:
                       1063     ;       while(dd--) ;
                       1064                             ; SOURCE LINE # 213
000004 EF              1065             MOV     A,R7
000005 1F              1066             DEC     R7
000006 AC06            1067             MOV     R4,AR6
000008 7001            1068             JNZ     ?C0025
00000A 1E              1069             DEC     R6
00000B                 1070     ?C0025:
00000B 4C              1071             ORL     A,R4
00000C 70F6            1072             JNZ     ?C0016
                       1073     ; }
                       1074                             ; SOURCE LINE # 214
00000E                 1075     ?C0018:
00000E 22              1076             RET     
                       1077     ; END OF _delay
                       1078     
                       1079     ; 
                       1080     ; /*"(---------------------------------------------------------------------)"*/
                       1081     ; /*"(-           DEFINE INTERNAL DATA OF SERIAL COMMUNICATION            -)"*/
                       1082     ; /*"(---------------------------------------------------------------------)"*/
                       1083     ; /*"(---------------------------------------------------------------------)"*/
                       1084     ; /*"(-                      INITIAL FUNCTION SERIAL                      -)"*/
                       1085     ; /*"(---------------------------------------------------------------------)"*/
                       1086     ; void Init_serial() 
                       1087     
------                 1088             RSEG  ?PR?Init_serial?IDE_51_MAIN_REV1
000000                 1089     Init_serial:
                       1090             USING   0
                       1091                             ; SOURCE LINE # 222
                       1092     ; {
                       1093                             ; SOURCE LINE # 223
                       1094     ;    //' SET TH1 AND PCON AT FEQUENCY. = 18.432 MHz
                       1095     ;    PCON |= 0x80; 
                       1096                             ; SOURCE LINE # 225
000000 438780          1097             ORL     PCON,#080H
                       1098     ;    TH1 = 246;
                       1099                             ; SOURCE LINE # 226
000003 758DF6          1100             MOV     TH1,#0F6H
                       1101     ;    SCON = 0x50; 
                       1102                             ; SOURCE LINE # 227
000006 759850          1103             MOV     SCON,#050H
                       1104     ;    TMOD = 0x20; 
                       1105                             ; SOURCE LINE # 228
000009 758920          1106             MOV     TMOD,#020H
                       1107     ;    TR1= 1;     //' TIMER 1 RUN.
                       1108                             ; SOURCE LINE # 229
00000C D28E            1109             SETB    TR1
                       1110     ;    TI   = 0;   //' SET TI SEND FIRST CHAR OF UART.
                       1111                             ; SOURCE LINE # 230
00000E C299            1112             CLR     TI
                       1113     ; }
                       1114                             ; SOURCE LINE # 231
000010 22              1115             RET     
                       1116     ; END OF Init_serial
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE    20

                       1117     
                       1118     ; 
                       1119     ; /*"(---------------------------------------------------------------------)"*/
                       1120     ; /*"(-                      APPLICATIONS SEND DATA                       -)"*/
                       1121     ; /*"(---------------------------------------------------------------------)"*/
                       1122     ; char putchar(unsigned char c) 
                       1123     
------                 1124             RSEG  ?PR?_putchar?IDE_51_MAIN_REV1
000000                 1125     _putchar:
                       1126             USING   0
                       1127                             ; SOURCE LINE # 236
                       1128     ;---- Variable 'c?947' assigned to Register 'R7' ----
                       1129     ; {
                       1130                             ; SOURCE LINE # 237
                       1131     ;       SBUF = c; 
                       1132                             ; SOURCE LINE # 238
000000 8F99            1133             MOV     SBUF,R7
000002                 1134     ?C0020:
                       1135     ;       while(!TI);
                       1136                             ; SOURCE LINE # 239
000002 3099FD          1137             JNB     TI,?C0020
000005                 1138     ?C0021:
                       1139     ;       TI = 0;      //' CLEAR BIT FLAG TI_0
                       1140                             ; SOURCE LINE # 240
000005 C299            1141             CLR     TI
                       1142     ;       return (c);  //' MOV DATA TO SERIAL 
                       1143                             ; SOURCE LINE # 241
                       1144     ; }
                       1145                             ; SOURCE LINE # 242
000007                 1146     ?C0022:
000007 22              1147             RET     
                       1148     ; END OF _putchar
                       1149     
000023                 1150     CSEG    AT      00023H
000023 020000     F    1151             LJMP    RxdReceive
                       1152     
                       1153     ; 
                       1154     ; /*"(---------------------------------------------------------------------)"*/
                       1155     ; /*"(-                    APPLICATIONS RECEIVE DATA                      -)"*/
                       1156     ; /*"(---------------------------------------------------------------------)"*/
                       1157     ; void RxdReceive () interrupt 4 
                       1158     
------                 1159             RSEG  ?PR?RxdReceive?IDE_51_MAIN_REV1
                       1160             USING   0
000000                 1161     RxdReceive:
000000 C0E0            1162             PUSH    ACC
000002 C0D0            1163             PUSH    PSW
000004 75D000          1164             MOV     PSW,#00H
000007 C000            1165             PUSH    AR0
000009 C007            1166             PUSH    AR7
                       1167             USING   0
                       1168                             ; SOURCE LINE # 247
                       1169     ; {
                       1170     ;       unsigned char c;
                       1171     ;       if (RI == 1) 
                       1172                             ; SOURCE LINE # 250
00000B 309819          1173             JNB     RI,?C0024
                       1174     ;       { 
                       1175                             ; SOURCE LINE # 251
                       1176     ;               c = SBUF;
                       1177                             ; SOURCE LINE # 252
                       1178     ;---- Variable 'c?1048' assigned to Register 'R7' ----
00000E AF99            1179             MOV     R7,SBUF
                       1180     ;               Aux_Data[Bytes_write++] = c; //   
                       1181                             ; SOURCE LINE # 253
000010 0500       F    1182             INC     Bytes_write+01H
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE    21

000012 E500       F    1183             MOV     A,Bytes_write+01H
000014 7002            1184             JNZ     ?C0026
000016 0500       F    1185             INC     Bytes_write
000018                 1186     ?C0026:
000018 14              1187             DEC     A
000019 2400       F    1188             ADD     A,#LOW (Aux_Data)
00001B F8              1189             MOV     R0,A
00001C A607            1190             MOV     @R0,AR7
                       1191     ;               Aux_Data[Bytes_write+1] = '\0'; //   
                       1192                             ; SOURCE LINE # 254
00001E 7400       F    1193             MOV     A,#LOW (Aux_Data+01H)
000020 2500       F    1194             ADD     A,Bytes_write+01H
000022 F8              1195             MOV     R0,A
000023 7600            1196             MOV     @R0,#00H
                       1197     ;               RI = 0;
                       1198                             ; SOURCE LINE # 255
000025 C298            1199             CLR     RI
                       1200     ;       }
                       1201                             ; SOURCE LINE # 256
                       1202     ;       return;
                       1203     ; }
                       1204                             ; SOURCE LINE # 258
000027                 1205     ?C0024:
000027 D007            1206             POP     AR7
000029 D000            1207             POP     AR0
00002B D0D0            1208             POP     PSW
00002D D0E0            1209             POP     ACC
00002F 32              1210             RETI    
                       1211     ; END OF RxdReceive
                       1212     
                       1213             END
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE    22

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                 T Y P E  V A L U E     ATTRIBUTES

?_PRINTF?BYTE. . . . . . . . . . . . .  D  ADDR  -------       EXT
?_READ_ATA_REG?BYTE. . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?_READ_ATA_REG?IDE_51_MAIN_REV1
?_WRITE_ATA_REG?BYTE . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?_WRITE_ATA_REG?IDE_51_MAIN_REV1
?C0001 . . . . . . . . . . . . . . . .  C  ADDR  00B6H     R   SEG=?PR?MAIN?IDE_51_MAIN_REV1
?C0002 . . . . . . . . . . . . . . . .  C  ADDR  00BFH     R   SEG=?PR?MAIN?IDE_51_MAIN_REV1
?C0003 . . . . . . . . . . . . . . . .  C  ADDR  00C2H     R   SEG=?PR?MAIN?IDE_51_MAIN_REV1
?C0006 . . . . . . . . . . . . . . . .  C  ADDR  0009H     R   SEG=?PR?WAIT_ATA_READY?IDE_51_MAIN_REV1
?C0008 . . . . . . . . . . . . . . . .  C  ADDR  0012H     R   SEG=?PR?WAIT_ATA_READY?IDE_51_MAIN_REV1
?C0010 . . . . . . . . . . . . . . . .  C  ADDR  001BH     R   SEG=?PR?WAIT_ATA_READY?IDE_51_MAIN_REV1
?C0014 . . . . . . . . . . . . . . . .  C  ADDR  0017H     R   SEG=?PR?_READ_ATA_REG?IDE_51_MAIN_REV1
?C0016 . . . . . . . . . . . . . . . .  C  ADDR  0004H     R   SEG=?PR?_DELAY?IDE_51_MAIN_REV1
?C0018 . . . . . . . . . . . . . . . .  C  ADDR  000EH     R   SEG=?PR?_DELAY?IDE_51_MAIN_REV1
?C0020 . . . . . . . . . . . . . . . .  C  ADDR  0002H     R   SEG=?PR?_PUTCHAR?IDE_51_MAIN_REV1
?C0021 . . . . . . . . . . . . . . . .  C  ADDR  0005H     R   SEG=?PR?_PUTCHAR?IDE_51_MAIN_REV1
?C0022 . . . . . . . . . . . . . . . .  C  ADDR  0007H     R   SEG=?PR?_PUTCHAR?IDE_51_MAIN_REV1
?C0024 . . . . . . . . . . . . . . . .  C  ADDR  0027H     R   SEG=?PR?RXDRECEIVE?IDE_51_MAIN_REV1
?C0025 . . . . . . . . . . . . . . . .  C  ADDR  000BH     R   SEG=?PR?_DELAY?IDE_51_MAIN_REV1
?C0026 . . . . . . . . . . . . . . . .  C  ADDR  0018H     R   SEG=?PR?RXDRECEIVE?IDE_51_MAIN_REV1
?C_STARTUP . . . . . . . . . . . . . .  C  ADDR  -------       EXT
?CO?IDE_51_MAIN_REV1 . . . . . . . . .  C  SEG   0002A1H       REL=UNIT, ALN=BYTE
?DT?_READ_ATA_REG?IDE_51_MAIN_REV1 . .  D  SEG   000001H       REL=UNIT, ALN=BYTE
?DT?_WRITE_ATA_REG?IDE_51_MAIN_REV1. .  D  SEG   000001H       REL=UNIT, ALN=BYTE
?DT?IDE_51_MAIN_REV1 . . . . . . . . .  D  SEG   000018H       REL=UNIT, ALN=BYTE
?DT?REPORTDISKSTATUS?IDE_51_MAIN_REV1.  D  SEG   000001H       REL=UNIT, ALN=BYTE
?DT?REPORTERRORSTATUS?IDE_51_MAIN_REV1  D  SEG   000001H       REL=UNIT, ALN=BYTE
?PR?_DELAY?IDE_51_MAIN_REV1. . . . . .  C  SEG   00000FH       REL=UNIT, ALN=BYTE
?PR?_PUTCHAR?IDE_51_MAIN_REV1. . . . .  C  SEG   000008H       REL=UNIT, ALN=BYTE
?PR?_READ_ATA_REG?IDE_51_MAIN_REV1 . .  C  SEG   000018H       REL=UNIT, ALN=BYTE
?PR?_WRITE_ATA_REG?IDE_51_MAIN_REV1. .  C  SEG   000023H       REL=UNIT, ALN=BYTE
?PR?INIT_SERIAL?IDE_51_MAIN_REV1 . . .  C  SEG   000011H       REL=UNIT, ALN=BYTE
?PR?MAIN?IDE_51_MAIN_REV1. . . . . . .  C  SEG   0000CDH       REL=UNIT, ALN=BYTE
?PR?REP_ALL_REG?IDE_51_MAIN_REV1 . . .  C  SEG   000076H       REL=UNIT, ALN=BYTE
?PR?REPORTDISKSTATUS?IDE_51_MAIN_REV1.  C  SEG   000091H       REL=UNIT, ALN=BYTE
?PR?REPORTERRORSTATUS?IDE_51_MAIN_REV1  C  SEG   00008AH       REL=UNIT, ALN=BYTE
?PR?RXDRECEIVE?IDE_51_MAIN_REV1. . . .  C  SEG   000030H       REL=UNIT, ALN=BYTE
?PR?WAIT_ATA_READY?IDE_51_MAIN_REV1. .  C  SEG   00001CH       REL=UNIT, ALN=BYTE
?REPORTDISKSTATUS?BYTE . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?REPORTDISKSTATUS?IDE_51_MAIN_REV1
?REPORTERRORSTATUS?BYTE. . . . . . . .  D  ADDR  0000H     R   SEG=?DT?REPORTERRORSTATUS?IDE_51_MAIN_REV1
?SC_0. . . . . . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_107. . . . . . . . . . . . . . . .  C  ADDR  006BH     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_129. . . . . . . . . . . . . . . .  C  ADDR  0081H     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_132. . . . . . . . . . . . . . . .  C  ADDR  0084H     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_152. . . . . . . . . . . . . . . .  C  ADDR  0098H     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_172. . . . . . . . . . . . . . . .  C  ADDR  00ACH     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_211. . . . . . . . . . . . . . . .  C  ADDR  00D3H     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_235. . . . . . . . . . . . . . . .  C  ADDR  00EBH     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_26 . . . . . . . . . . . . . . . .  C  ADDR  001AH     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_266. . . . . . . . . . . . . . . .  C  ADDR  010AH     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_298. . . . . . . . . . . . . . . .  C  ADDR  012AH     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_329. . . . . . . . . . . . . . . .  C  ADDR  0149H     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_359. . . . . . . . . . . . . . . .  C  ADDR  0167H     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_388. . . . . . . . . . . . . . . .  C  ADDR  0184H     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_423. . . . . . . . . . . . . . . .  C  ADDR  01A7H     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_454. . . . . . . . . . . . . . . .  C  ADDR  01C6H     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_47 . . . . . . . . . . . . . . . .  C  ADDR  002FH     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_500. . . . . . . . . . . . . . . .  C  ADDR  01F4H     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_517. . . . . . . . . . . . . . . .  C  ADDR  0205H     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_532. . . . . . . . . . . . . . . .  C  ADDR  0214H     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_548. . . . . . . . . . . . . . . .  C  ADDR  0224H     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_562. . . . . . . . . . . . . . . .  C  ADDR  0232H     R   SEG=?CO?IDE_51_MAIN_REV1
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE    23

?SC_599. . . . . . . . . . . . . . . .  C  ADDR  0257H     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_62 . . . . . . . . . . . . . . . .  C  ADDR  003EH     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_629. . . . . . . . . . . . . . . .  C  ADDR  0275H     R   SEG=?CO?IDE_51_MAIN_REV1
?SC_85 . . . . . . . . . . . . . . . .  C  ADDR  0055H     R   SEG=?CO?IDE_51_MAIN_REV1
_DELAY . . . . . . . . . . . . . . . .  C  ADDR  0004H     R   SEG=?PR?_DELAY?IDE_51_MAIN_REV1
_PRINTF. . . . . . . . . . . . . . . .  C  ADDR  -------       EXT
_PUTCHAR . . . . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?_PUTCHAR?IDE_51_MAIN_REV1
_READ_ATA_REG. . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?_READ_ATA_REG?IDE_51_MAIN_REV1
_WRITE_ATA_REG . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?_WRITE_ATA_REG?IDE_51_MAIN_REV1
A0 . . . . . . . . . . . . . . . . . .  B  ADDR  0090H.0   A   
A1 . . . . . . . . . . . . . . . . . .  B  ADDR  0090H.1   A   
A2 . . . . . . . . . . . . . . . . . .  B  ADDR  0090H.2   A   
AC . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.6   A   
ACC. . . . . . . . . . . . . . . . . .  D  ADDR  00E0H     A   
ADCF . . . . . . . . . . . . . . . . .  D  ADDR  00F6H     A   
ADCLK. . . . . . . . . . . . . . . . .  D  ADDR  00F2H     A   
ADCON. . . . . . . . . . . . . . . . .  D  ADDR  00F3H     A   
ADDH . . . . . . . . . . . . . . . . .  D  ADDR  00F5H     A   
ADDL . . . . . . . . . . . . . . . . .  D  ADDR  00F4H     A   
AR0. . . . . . . . . . . . . . . . . .  D  ADDR  0000H     A   
AR6. . . . . . . . . . . . . . . . . .  D  ADDR  0006H     A   
AR7. . . . . . . . . . . . . . . . . .  D  ADDR  0007H     A   
AUX_DATA . . . . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?IDE_51_MAIN_REV1
AUXR . . . . . . . . . . . . . . . . .  D  ADDR  008EH     A   
AUXR1. . . . . . . . . . . . . . . . .  D  ADDR  00A2H     A   
B. . . . . . . . . . . . . . . . . . .  D  ADDR  00F0H     A   
BREG?644 . . . . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?_WRITE_ATA_REG?IDE_51_MAIN_REV1
BYTES_WRITE. . . . . . . . . . . . . .  D  ADDR  0012H     R   SEG=?DT?IDE_51_MAIN_REV1
C_T2 . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.1   A   
CCAP0H . . . . . . . . . . . . . . . .  D  ADDR  00FAH     A   
CCAP0L . . . . . . . . . . . . . . . .  D  ADDR  00EAH     A   
CCAP1H . . . . . . . . . . . . . . . .  D  ADDR  00FBH     A   
CCAP1L . . . . . . . . . . . . . . . .  D  ADDR  00EBH     A   
CCAP2H . . . . . . . . . . . . . . . .  D  ADDR  00FCH     A   
CCAP2L . . . . . . . . . . . . . . . .  D  ADDR  00ECH     A   
CCAP3H . . . . . . . . . . . . . . . .  D  ADDR  00FDH     A   
CCAP3L . . . . . . . . . . . . . . . .  D  ADDR  00EDH     A   
CCAP4H . . . . . . . . . . . . . . . .  D  ADDR  00FEH     A   
CCAP4L . . . . . . . . . . . . . . . .  D  ADDR  00EEH     A   
CCAPM0 . . . . . . . . . . . . . . . .  D  ADDR  00DAH     A   
CCAPM1 . . . . . . . . . . . . . . . .  D  ADDR  00DBH     A   
CCAPM2 . . . . . . . . . . . . . . . .  D  ADDR  00DCH     A   
CCAPM3 . . . . . . . . . . . . . . . .  D  ADDR  00DDH     A   
CCAPM4 . . . . . . . . . . . . . . . .  D  ADDR  00DEH     A   
CCF0 . . . . . . . . . . . . . . . . .  B  ADDR  00D8H.0   A   
CCF1 . . . . . . . . . . . . . . . . .  B  ADDR  00D8H.1   A   
CCF2 . . . . . . . . . . . . . . . . .  B  ADDR  00D8H.2   A   
CCF3 . . . . . . . . . . . . . . . . .  B  ADDR  00D8H.3   A   
CCF4 . . . . . . . . . . . . . . . . .  B  ADDR  00D8H.4   A   
CCON . . . . . . . . . . . . . . . . .  D  ADDR  00D8H     A   
CF . . . . . . . . . . . . . . . . . .  B  ADDR  00D8H.7   A   
CH . . . . . . . . . . . . . . . . . .  D  ADDR  00F9H     A   
CKCON. . . . . . . . . . . . . . . . .  D  ADDR  008FH     A   
CL . . . . . . . . . . . . . . . . . .  D  ADDR  00E9H     A   
CMOD . . . . . . . . . . . . . . . . .  D  ADDR  00D9H     A   
CP_RL2 . . . . . . . . . . . . . . . .  B  ADDR  00C8H.0   A   
CR . . . . . . . . . . . . . . . . . .  B  ADDR  00D8H.6   A   
CS0N . . . . . . . . . . . . . . . . .  B  ADDR  0090H.3   A   
CS1N . . . . . . . . . . . . . . . . .  B  ADDR  0090H.4   A   
CY . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.7   A   
DATABITS . . . . . . . . . . . . . . .  D  ADDR  0010H     R   SEG=?DT?IDE_51_MAIN_REV1
DATASPEED. . . . . . . . . . . . . . .  D  ADDR  0015H     R   SEG=?DT?IDE_51_MAIN_REV1
DISKERRORCODE?441. . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?REPORTERRORSTATUS?IDE_51_MAIN_REV1
DISKSTATUS?340 . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?REPORTDISKSTATUS?IDE_51_MAIN_REV1
DPH. . . . . . . . . . . . . . . . . .  D  ADDR  0083H     A   
DPL. . . . . . . . . . . . . . . . . .  D  ADDR  0082H     A   
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE    24

EA . . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.7   A   
EADC . . . . . . . . . . . . . . . . .  B  ADDR  00E8H.1   A   
EC . . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.6   A   
EECON. . . . . . . . . . . . . . . . .  D  ADDR  00D2H     A   
ES . . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.4   A   
ET0. . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.1   A   
ET1. . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.3   A   
ET2. . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.5   A   
EX0. . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.0   A   
EX1. . . . . . . . . . . . . . . . . .  B  ADDR  00A8H.2   A   
EXEN2. . . . . . . . . . . . . . . . .  B  ADDR  00C8H.3   A   
EXF2 . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.6   A   
F0 . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.5   A   
FCON . . . . . . . . . . . . . . . . .  D  ADDR  00D1H     A   
FE . . . . . . . . . . . . . . . . . .  B  ADDR  0098H.7   A   
IDE_51_MAIN_REV1 . . . . . . . . . . .  -- ----  -------       
IE0. . . . . . . . . . . . . . . . . .  B  ADDR  0088H.1   A   
IE1. . . . . . . . . . . . . . . . . .  B  ADDR  0088H.3   A   
IEN0 . . . . . . . . . . . . . . . . .  D  ADDR  00A8H     A   
IEN1 . . . . . . . . . . . . . . . . .  D  ADDR  00E8H     A   
INIT_SERIAL. . . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?INIT_SERIAL?IDE_51_MAIN_REV1
INT0 . . . . . . . . . . . . . . . . .  B  ADDR  00B0H.2   A   
INT1 . . . . . . . . . . . . . . . . .  B  ADDR  00B0H.3   A   
IPH0 . . . . . . . . . . . . . . . . .  D  ADDR  00B7H     A   
IPH1 . . . . . . . . . . . . . . . . .  D  ADDR  00F7H     A   
IPL0 . . . . . . . . . . . . . . . . .  D  ADDR  00B8H     A   
IPL1 . . . . . . . . . . . . . . . . .  D  ADDR  00F8H     A   
IT0. . . . . . . . . . . . . . . . . .  B  ADDR  0088H.0   A   
IT1. . . . . . . . . . . . . . . . . .  B  ADDR  0088H.2   A   
L?0027 . . . . . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?_DELAY?IDE_51_MAIN_REV1
L?0028 . . . . . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?_DELAY?IDE_51_MAIN_REV1
MAIN . . . . . . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?MAIN?IDE_51_MAIN_REV1
OV . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.2   A   
P. . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.0   A   
P0 . . . . . . . . . . . . . . . . . .  D  ADDR  0080H     A   
P1 . . . . . . . . . . . . . . . . . .  D  ADDR  0090H     A   
P1_0 . . . . . . . . . . . . . . . . .  B  ADDR  0090H.0   A   
P1_1 . . . . . . . . . . . . . . . . .  B  ADDR  0090H.1   A   
P1_2 . . . . . . . . . . . . . . . . .  B  ADDR  0090H.2   A   
P1_3 . . . . . . . . . . . . . . . . .  B  ADDR  0090H.3   A   
P1_4 . . . . . . . . . . . . . . . . .  B  ADDR  0090H.4   A   
P1_5 . . . . . . . . . . . . . . . . .  B  ADDR  0090H.5   A   
P1_6 . . . . . . . . . . . . . . . . .  B  ADDR  0090H.6   A   
P1_7 . . . . . . . . . . . . . . . . .  B  ADDR  0090H.7   A   
P2 . . . . . . . . . . . . . . . . . .  D  ADDR  00A0H     A   
P2_0 . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.0   A   
P2_1 . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.1   A   
P2_2 . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.2   A   
P2_3 . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.3   A   
P2_4 . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.4   A   
P2_5 . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.5   A   
P2_6 . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.6   A   
P2_7 . . . . . . . . . . . . . . . . .  B  ADDR  00A0H.7   A   
P3 . . . . . . . . . . . . . . . . . .  D  ADDR  00B0H     A   
P3_0 . . . . . . . . . . . . . . . . .  B  ADDR  00B0H.0   A   
P3_1 . . . . . . . . . . . . . . . . .  B  ADDR  00B0H.1   A   
P3_2 . . . . . . . . . . . . . . . . .  B  ADDR  00B0H.2   A   
P3_3 . . . . . . . . . . . . . . . . .  B  ADDR  00B0H.3   A   
P3_4 . . . . . . . . . . . . . . . . .  B  ADDR  00B0H.4   A   
P3_5 . . . . . . . . . . . . . . . . .  B  ADDR  00B0H.5   A   
P3_6 . . . . . . . . . . . . . . . . .  B  ADDR  00B0H.6   A   
P3_7 . . . . . . . . . . . . . . . . .  B  ADDR  00B0H.7   A   
P4 . . . . . . . . . . . . . . . . . .  D  ADDR  00C0H     A   
PARITY . . . . . . . . . . . . . . . .  D  ADDR  0017H     R   SEG=?DT?IDE_51_MAIN_REV1
PCON . . . . . . . . . . . . . . . . .  D  ADDR  0087H     A   
PSW. . . . . . . . . . . . . . . . . .  D  ADDR  00D0H     A   
AX51 MACRO ASSEMBLER  IDE_51_MAIN_REV1                                                      04/18/06 18:53:03 PAGE    25

RB8. . . . . . . . . . . . . . . . . .  B  ADDR  0098H.2   A   
RCAP2H . . . . . . . . . . . . . . . .  D  ADDR  00CBH     A   
RCAP2L . . . . . . . . . . . . . . . .  D  ADDR  00CAH     A   
RCLK . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.5   A   
RD . . . . . . . . . . . . . . . . . .  B  ADDR  00B0H.7   A   
RDN. . . . . . . . . . . . . . . . . .  B  ADDR  0090H.6   A   
REN. . . . . . . . . . . . . . . . . .  B  ADDR  0098H.4   A   
REP_ALL_REG. . . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?REP_ALL_REG?IDE_51_MAIN_REV1
REPORTDISKSTATUS . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?REPORTDISKSTATUS?IDE_51_MAIN_REV1
REPORTERRORSTATUS. . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?REPORTERRORSTATUS?IDE_51_MAIN_REV1
RESETN . . . . . . . . . . . . . . . .  B  ADDR  0090H.7   A   
RETURN_VAL?543 . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?_READ_ATA_REG?IDE_51_MAIN_REV1
RI . . . . . . . . . . . . . . . . . .  B  ADDR  0098H.0   A   
RS0. . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.3   A   
RS1. . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.4   A   
RXD. . . . . . . . . . . . . . . . . .  B  ADDR  00B0H.0   A   
RXDRECEIVE . . . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?RXDRECEIVE?IDE_51_MAIN_REV1
SADDR. . . . . . . . . . . . . . . . .  D  ADDR  00A9H     A   
SADEN. . . . . . . . . . . . . . . . .  D  ADDR  00B9H     A   
SBUF . . . . . . . . . . . . . . . . .  D  ADDR  0099H     A   
SCON . . . . . . . . . . . . . . . . .  D  ADDR  0098H     A   
SERIALSET. . . . . . . . . . . . . . .  D  ADDR  0011H     R   SEG=?DT?IDE_51_MAIN_REV1
SM0. . . . . . . . . . . . . . . . . .  B  ADDR  0098H.7   A   
SM1. . . . . . . . . . . . . . . . . .  B  ADDR  0098H.6   A   
SM2. . . . . . . . . . . . . . . . . .  B  ADDR  0098H.5   A   
SP . . . . . . . . . . . . . . . . . .  D  ADDR  0081H     A   
STOPBITS . . . . . . . . . . . . . . .  D  ADDR  0014H     R   SEG=?DT?IDE_51_MAIN_REV1
T0 . . . . . . . . . . . . . . . . . .  B  ADDR  00B0H.4   A   
T1 . . . . . . . . . . . . . . . . . .  B  ADDR  00B0H.5   A   
T2CON. . . . . . . . . . . . . . . . .  D  ADDR  00C8H     A   
T2MOD. . . . . . . . . . . . . . . . .  D  ADDR  00C9H     A   
TB8. . . . . . . . . . . . . . . . . .  B  ADDR  0098H.3   A   
TCLK . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.4   A   
TCON . . . . . . . . . . . . . . . . .  D  ADDR  0088H     A   
TF0. . . . . . . . . . . . . . . . . .  B  ADDR  0088H.5   A   
TF1. . . . . . . . . . . . . . . . . .  B  ADDR  0088H.7   A   
TF2. . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.7   A   
TH0. . . . . . . . . . . . . . . . . .  D  ADDR  008CH     A   
TH1. . . . . . . . . . . . . . . . . .  D  ADDR  008DH     A   
TH2. . . . . . . . . . . . . . . . . .  D  ADDR  00CDH     A   
TI . . . . . . . . . . . . . . . . . .  B  ADDR  0098H.1   A   
TL0. . . . . . . . . . . . . . . . . .  D  ADDR  008AH     A   
TL1. . . . . . . . . . . . . . . . . .  D  ADDR  008BH     A   
TL2. . . . . . . . . . . . . . . . . .  D  ADDR  00CCH     A   
TMOD . . . . . . . . . . . . . . . . .  D  ADDR  0089H     A   
TR0. . . . . . . . . . . . . . . . . .  B  ADDR  0088H.4   A   
TR1. . . . . . . . . . . . . . . . . .  B  ADDR  0088H.6   A   
TR2. . . . . . . . . . . . . . . . . .  B  ADDR  00C8H.2   A   
TSTBIT . . . . . . . . . . . . . . . .  B  ADDR  00C0H.0   A   
TXD. . . . . . . . . . . . . . . . . .  B  ADDR  00B0H.1   A   
UD . . . . . . . . . . . . . . . . . .  B  ADDR  00D0H.1   A   
WAIT_ATA_READY . . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?PR?WAIT_ATA_READY?IDE_51_MAIN_REV1
WDTPRG . . . . . . . . . . . . . . . .  D  ADDR  00A7H     A   
WDTRST . . . . . . . . . . . . . . . .  D  ADDR  00A6H     A   
WR . . . . . . . . . . . . . . . . . .  B  ADDR  00B0H.6   A   
WRN. . . . . . . . . . . . . . . . . .  B  ADDR  0090H.5   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
